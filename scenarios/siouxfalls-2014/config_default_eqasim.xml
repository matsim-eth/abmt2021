<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE config SYSTEM "./dtd/config_v2.dtd">

<config>

	<module name="DiscreteModeChoice" >
		<param name="accumulateEstimationDelays" value="true" />
		<!-- Trips tested with the modes listed here will be cached for each combination of trip and agent during one replanning pass. -->
		<param name="cachedModes" value="car, bike, pt, walk" />
		<!-- Defines whether to run a runtime check that verifies that everything is set up correctl for a 'mode-choice-in-the-loop' setup. -->
		<param name="enforceSinglePlan" value="false" />
		<!-- Defines what happens if there is no feasible choice alternative for an agent: IGNORE_AGENT, INITIAL_CHOICE, EXCEPTION -->
		<param name="fallbackBehaviour" value="EXCEPTION" />
		<!-- Defines how home activities are identified. Built-in choices: FirstActivity, ActivityBased -->
		<param name="homeFinder" value="EqasimHomeFinder" />
		<!-- Defines which ModeAvailability component to use. Built-in choices: Default, Car -->
		<param name="modeAvailability" value="Car" />
		<!-- Main model type: Trip, Tour -->
		<param name="modelType" value="Tour" />
		<!-- Defines whether the DiscreteModeChoice strategy should be followed by a rerouting of all trips. If the estimator returns alternatives with routes attached this is not necessary. -->
		<param name="performReroute" value="false" />
		<!-- Defines which Selector component to use. Built-in choices: Maximum, MultinomialLogit, Random -->
		<param name="selector" value="MultinomialLogit" />
		<!-- Defines a number of TourConstraint components that should be activated. Built-in choices: FromTripBased, VehicleContinuity, SubtourMode -->
		<param name="tourConstraints" value="EqasimVehicleTourConstraint, FromTripBased" />
		<param name="tourEstimator" value="Cumulative" />
		<!-- Defines a number of TourFilter components that should be activated. Built-in choices: TourLength -->
		<param name="tourFilters" value="TourLengthFilter, OutsideFilter" />
		<!-- Defines which TourFinder component to use. Built-in choices: PlanBased, ActivityBased, HomeBased -->
		<param name="tourFinder" value="ActivityBased" />
		<!-- Defines a number of TripConstraint components that should be activated. Built-in choices: VehicleContinuity, ShapeFile, LinkAttribute, TransitWalk -->
		<param name="tripConstraints" value="TransitWalk, PassengerConstraint, OutsideConstraint" />
		<!-- Defines which TripEstimator component to use. Built-in choices: MATSimTripScoring, Uniform -->
		<param name="tripEstimator" value="EqasimUtilityEstimator" />
		<!-- Defines a number of TripFilter components that should be activated. Built-in choices:  -->
		<param name="tripFilters" value="" />
		<parameterset type="homeFinder:ActivityBased" >
			<!-- Comma-separated activity types which should be considered as home. -->
			<param name="activityTypes" value="home" />
		</parameterset>
		<parameterset type="modeAvailability:Car" >
			<!-- Defines which modes are avialable to the agents. -->
			<param name="availableModes" value="pt, car, walk, bike" />
		</parameterset>
		<parameterset type="modeAvailability:Default" >
			<!-- Defines which modes are avialable to the agents. -->
			<param name="availableModes" value="pt, car, walk, bike" />
		</parameterset>
		<parameterset type="selector:MultinomialLogit" >
			<!-- Defines whether candidates with a utility lower than the minimum utility should be filtered out. -->
			<param name="considerMinimumUtility" value="false" />
			<!-- Candidates with a utility above that threshold will be cut off to this value. -->
			<param name="maximumUtility" value="700.0" />
			<!-- Candidates with a utility lower than that threshold will not be considered by default. -->
			<param name="minimumUtility" value="-700.0" />
		</parameterset>
		<parameterset type="tourConstraint:SubtourMode" >
			<!-- Modes for which the sub-tour behaviour should be replicated. If all available modes are put here, this equals to SubTourModeChoice with singleLegProbability == 0.0; if only the constrained modes are put here, it equals singleLegProbability > 0.0 -->
			<param name="constrainedModes" value="" />
		</parameterset>
		<parameterset type="tourConstraint:VehicleContinuity" >
			<!-- Defines which modes must fulfill continuity constraints (can only be used where they have been brough to before) -->
			<param name="restrictedModes" value="car, bike" />
		</parameterset>
		<parameterset type="tourFilter:TourLength" >
			<!-- Defines the maximum allowed length of a tour. -->
			<param name="maximumLength" value="10" />
		</parameterset>
		<parameterset type="tourFinder:ActivityBased" >
			<!-- Comma-separated activity types which should be considered as start and end of a tour. If a plan does not start or end with such an activity additional tours are added. -->
			<param name="activityTypes" value="home" />
		</parameterset>
		<parameterset type="tripConstraint:LinkAttribute" >
			<!-- Link attribute that will be considered for feasibility of the trip. -->
			<param name="attributeName" value="null" />
			<!-- Value that the link attributes should equal. -->
			<param name="attributeValue" value="null" />
			<!-- Modes for which the constraint will be considered. -->
			<param name="constrainedModes" value="" />
			<!-- Defines the criterion on when a trip with the constrained mode will be allowed: ORIGIN, DESTINATION, BOTH, ANY, NONE -->
			<param name="requirement" value="BOTH" />
		</parameterset>
		<parameterset type="tripConstraint:ShapeFile" >
			<!-- Modes for which the shapes will be considered. -->
			<param name="constrainedModes" value="" />
			<!-- Path to a shape file, which should have the same projection as the network. -->
			<param name="path" value="null" />
			<!-- Defines the criterion on when a trip with the constrained mode will be allowed: ORIGIN, DESTINATION, BOTH, ANY, NONE -->
			<param name="requirement" value="BOTH" />
		</parameterset>
		<parameterset type="tripConstraint:VehicleContinuity" >
			<!-- Defines if the advanced constriant is used (vehicles must be brought back home). -->
			<param name="isAdvanced" value="true" />
			<!-- Defines which modes must fulfill continuity constraints (can only be used where they have been brough to before) -->
			<param name="restrictedModes" value="car, bike" />
		</parameterset>
		<parameterset type="tripEstimator:MATSimTripScoring" >
			<!-- Modes which are considered as public transit, i.e. they involve waiting for a vehicle. -->
			<param name="ptLegModes" value="pt" />
		</parameterset>
	</module>

	<module name="eqasim" >
		<param name="costParametersPath" value="null" />
		<param name="crossingPenalty" value="3.0" />
		<!-- Possible values: kilometer, meter, mile, foot -->
		<param name="distanceUnit" value="meter" />
		<param name="modeParametersPath" value="scenarios/siouxfalls-2014/mode_params.yml" />
		<param name="sampleSize" value="1.0" />
		<!-- Possible values: kilometer, meter, mile, foot -->
		<param name="tripAnalysisDistanceUnit" value="meter" />
		<param name="tripAnalysisInterval" value="0" />
		<param name="useScheduleBasedTransport" value="true" />
	</module>

	<module name="network">
		<param name="inputNetworkFile" value="Siouxfalls_network_PT.xml" />
	</module>

	<module name="plans">
		<param name="inputPlansFile" value="sf_population_10pct.xml.gz" />
	</module>
	
	<module name="facilities" >
		<param name="inputFacilitiesFile" value="Siouxfalls_facilities.xml.gz" />
		<param name="facilitiesSource" value="fromFile"/>
	</module>
	
	<module name="controler">
		<param name="writeEventsInterval" value="1000" />
		<param name="writePlansInterval" value="1000" />
		<param name="eventsFileFormat" value="xml" />
		<param name="outputDirectory" value="scenarios/siouxfalls-2014/output_dmc3"/>
		<param name="firstIteration" value="0" />
		<param name="lastIteration" value="100" />
		<param name="mobsim" value="qsim" />
	</module>
 	
 	<module name="qsim" >
		<param name="startTime" value="00:00:00" />
		<param name="endTime" value="30:00:00" />
		<param name="flowCapacityFactor" value="1.00" />
		<param name="storageCapacityFactor" value="1.00" />
		<param name="numberOfThreads" value="1" />
		<param name = "snapshotperiod"	value = "00:00:01"/>

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="3600.0" />
		<param name="timeStepSize" value="00:00:01" />

		<!-- `queue' for the standard queue model, `withHolesExperimental' (experimental!!) for the queue model with holes -->
		<param name="trafficDynamics" value="queue" />
		
	</module>

	<module name="planCalcScore">


		<param name="BrainExpBeta" value="1.0" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<parameterset type="scoringParameters">
		<param name="earlyDeparture" value="0.0" />
		<param name="lateArrival" value="0.0" />
		<param name="marginalUtilityOfMoney" value="0.062" />
		<param name="performing" value="0.96" />
		<param name="utilityOfLineSwitch" value="0.0"/>
		<param name="waitingPt" value="-0.18" />

		<parameterset type="modeParams">
			<param name="mode" value="car"/>
			<param name="marginalUtilityOfTraveling_util_hr" value="0.0" />
			<param name="constant" value="-0.562"/>
			<param name="monetaryDistanceRate" value="-0.0004"/>
		</parameterset>
		<parameterset type="modeParams">
			<param name="mode" value="pt"/>
			<param name="marginalUtilityOfTraveling_util_hr" value="-0.18" />
			<param name="monetaryDistanceRate" value="0.0"/>
			<param name="constant" value="-0.124"/>
		</parameterset>
		<parameterset type="modeParams">
			<param name="mode" value="walk"/>
			<param name="marginalUtilityOfTraveling_util_hr" value="-1.14" />
			<param name="constant" value="0.0"/>
			<param name="marginalUtilityOfDistance_util_m" value="0.0"/>
		</parameterset>

<parameterset type="modeParams">
			<param name="mode" value="bike"/>
			<param name="marginalUtilityOfTraveling_util_hr" value="-1.14" />
			<param name="constant" value="0.0"/>
			<param name="marginalUtilityOfDistance_util_m" value="0.0"/>
		</parameterset>

		<parameterset type="activityParams">
			<param name="activityType"    value="home" /> <!-- home -->
			<param name="priority"        value="1" />
			<param name="typicalDuration" value="13:00:00" />
			<param name="minimalDuration" value="01:00:00" />
		</parameterset>
		<parameterset type="activityParams">
			<param name="activityType"            value="work" />
			<param name="priority"        value="1" />
			<param name="typicalDuration" value="09:00:00" />
			<param name="minimalDuration" value="08:00:00" />
			<param name="openingTime"     value="08:00:00" />
			<param name="earliestEndTime" value="17:00:00" />
			<param name="latestStartTime" value="09:00:00" />
			<param name="closingTime"     value="18:00:00" />
		</parameterset>

		<parameterset type="activityParams">
			<param name="activityType"            value="secondary" />
			<param name="priority"        value="1" />
			<param name="typicalDuration" value="01:00:00" />
			<param name="minimalDuration" value="00:30:00" />
			<param name="openingTime"     value="08:00:00" />
			<param name="closingTime"     value="20:00:00" />
		</parameterset>
		</parameterset>
	</module>
	
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something like 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="1" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="NonSelectedPlanSelector" />
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="DiscreteModeChoice" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
		<parameterset type="strategysettings" >
			<param name="disableAfterIteration" value="-1" />
			<param name="executionPath" value="null" />
			<param name="strategyName" value="KeepLastSelected" />
			<param name="subpopulation" value="null" />
			<param name="weight" value="0.9" />
		</parameterset>
	</module>
	
<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >
		<param name="mutationRange" value="3600.00" />
	</module>

<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="500.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="300.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1500.0" />
	</module>

	
	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="true" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,walk" />
	</module>
   
  	<module name="transit">
  	  	<param name="useTransit" value="true" />
  	  		<param name="transitScheduleFile" value="Siouxfalls_transitSchedule.xml" />
 		<param name="vehiclesFile" value="Siouxfalls_vehicles.xml" />
  	 	<param name="transitModes" value="pt,bus" />
  	</module>
	
	
</config>
